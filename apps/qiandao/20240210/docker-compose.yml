services:
  qiandao:
    container_name: ${CONTAINER_NAME}
    restart: always
    networks:
      - 1panel-network
    ports:
      - "${PANEL_APP_PORT_HTTP}:80"
    volumes:
      - ./data:/usr/src/app/config
    environment:
      # 监听地址
      # - BIND=0.0.0.0
      # 监听端口
       - PORT=80
      # 是否启用Debug模式
      # - QIANDAO_DEBUG=False
      # 任务定时执行方式，默认为Queue，可选Queue或Batch
      # - WORKER_METHOD=Queue
      # 是否启用多进程模式，Windows平台无效
      # - MULTI_PROCESS=False
      # 是否启用自动热加载，MULTI_PROCESS=True时无效
       - AUTO_RELOAD=False
      # 发送的邮件链接启用HTTPS，非框架前端使用HTTPS，如果前端需要HTTPS，请使用反向代理
      # - ENABLE_HTTPS=False
      # 指定访问域名，建议修改，否则通过邮件重置密码等功能无效
      # - DOMAIN=
      # AES加密密钥，强烈建议修改
       - AES_KEY=${AES_PWD}
      # cookie加密密钥，强烈建议修改
       - COOKIE_SECRET=${COOKIE_PWD}
      # Cookie在客户端中保留的天数
      # - COOKIE_DAY=5
      # 需要使用MySQL时设置为'mysql'
       - DB_TYPE=sqlite3
      # 需要使用MySQL时，设置为(mysql://用户名:密码@hostname:port/数据库名?auth_plugin=)
      # - JAWSDB_MARIA_URL=mysql://user:pass@localhost:3306/dbname\?auth_plugin=
      # 是否启用SQLAlchmey的日志输出，默认为False
      # - QIANDAO_SQL_ECHO=False
      # SQLAlchmey日志名称，默认为'QD.sql_engine'
      # - QIANDAO_SQL_LOGGING_NAME=qiandao.sql
      # SQLAlchmey日志级别，默认为'Warning'
      # - QIANDAO_SQL_LOGGING_LEVEL=WARNING
      # 是否启用SQLAlchmey的连接池日志输出，默认为True
      # - QIANDAO_SQL_ECHO_POOL=True
      # SQLAlchmey连接池日志名称，默认为'QD.sql_pool'
      # - QIANDAO_SQL_LOGGING_POOL_NAME=QD.sql_pool
      # SQLAlchmey连接池日志级别，默认为'Warning'
      # - QIANDAO_SQL_LOGGING_POOL_LEVEL=Warning
      # SQLAlchmey连接池大小，默认为10
      # - QIANDAO_SQL_POOL_SIZE=5
      # SQLAlchmey连接池最大溢出，默认为50
      # - QIANDAO_SQL_MAX_OVERFLOW=10
      # 是否在连接池获取连接前，先ping一下，默认为True
      # - QIANDAO_SQL_POOL_PRE_PING=True
      # SQLAlchmey连接池回收时间，默认为3600a
      # - QIANDAO_SQL_POOL_RECYCLE=3600
      # SQLAlchmey连接池超时时间，默认为60
      # - QIANDAO_SQL_POOL_TIMEOUT=60
      # SQLAlchmey是否使用LIFO算法，默认为True
      # - QIANDAO_SQL_POOL_USE_LIFO=True
      # 需要使用Redis或RedisCloud时，设置为http://rediscloud:密码@hostname:port
      # - REDISCLOUD_URL=http://rediscloud:密码@hostname:port
      # 默认为1
      # - REDIS_DB_INDEX=1
      # (限Redis连接已开启)登录用户或IP在1小时内分数=操作失败次数*相应惩罚分值，分数达到evil上限后自动封禁直至下一小时周期
      # - QIANDAO_EVIL=1000
      # 是否关闭本机私有IP地址用户及Localhost_API请求的evil限制
      # - EVIL_PASS_LAN_IP=True
      # 是否启用在控制台日志中打印Exception的TraceBack信息
      # - TRACEBACK_PRINT=False
      # 默认为push_pic.png
      # - PUSH_PIC_URL=https://fastly.jsdelivr.net/gh/qd-today/qd@master/web/static/img/push_pic.png
      # 是否允许开启定期推送QD任务日志，默认为True
      # - PUSH_BATCH_SW=True
      # 邮箱SMTP服务器
      # - MAIL_SMTP=''
      # 邮箱SMTP服务器端口
      # - MAIL_PORT=465
      # 邮箱用户名
      # - MAIL_USER=''
      # 邮箱密码
      # - MAIL_PASSWORD=''
      # 发送时使用的邮箱，默认与MAIL_USER相同
      # - MAIL_FROM=${MAIL_USER}
      # 邮箱域名，没啥用，使用的DOMAIN
      # - MAIL_DOMAIN=mail.qd.today
      # 全局代理域名列表，用"|"分隔
      # - PROXIES=''
      # 全局代理黑名单模式，默认不启用
      # "url"为网址匹配模式；"regexp"为正则表达式匹配模式
      # - PROXY_DIRECT_MODE=regexp
      # 全局代理黑名单匹配规则
      # - PROXY_DIRECT=(?xi)\A([a-z][a-z0-9+\-.]*://)?(0(.0){3}|127(.0){2}.1|localhost|\[::([\d]+)?\])(:[0-9]+)?
      # 是否启用Pycurl模组
      # - USE_PYCURL=True
      # 在Pycurl环境下部分请求可能导致Request错误时，自动修改冲突设置并重发请求
      # - ALLOW_RETRY=True
      # 通过Curl使用指定DNS进行解析(仅支持Pycurl环境)，如8.8.8.8
      # - DNS_SERVER=''
      # 是否允许使用Curl进行Encoding操作
      # - CURL_ENCODING=True
      # 是否允许Curl使用Headers中自定义Content-Length请求
      # - CURL_CONTENT_LENGTH=True
      # 详见配置...
      # - NOT_RETRY_CODE=301|302|303|304|305|307|400|401|403|404|405|407|408|409|410|412|415|413|414|500|501|502|503|504|599
      # - EMPTY_RETRY=True
      # 第一个注册用户为管理员，False关闭
       - USER0ISADMIN=False
      # config目录下自定义ONNX文件名（不填 ".onnx" 后缀），多个onnx文件名用"|"分隔
      # - EXTRA_ONNX_NAME=''
      # config目录下自定义ONNX对应自定义charsets.json文件名（不填 ".json" 后缀），多个json文件名用"|"分隔
      # - EXTRA_CHARSETS_NAME=''
      # WebSocket ping间隔，单位为秒，默认为5s
      # - WS_PING_INTERVAL=5
      # WebSocket ping超时时间，单位为秒，默认为30s
      # - WS_PING_TIMEOUT=30
      # WebSocket单次接收最大消息大小，默认为10MB
      # - WS_MAX_MESSAGE_SIZE=10485760
      # WebSocket最大消息队列大小，默认为100
      # - WS_MAX_QUEUE_SIZE=100
      # WebSocket公共模板更新页面最大连接数，默认为30
      # - WS_MAX_CONNECTIONS_SUBSCRIBE=30
      # 订阅加速方式或地址，用于加速公共模板更新，仅适用于GitHub
      # - SUBSCRIBE_ACCELERATE_URL=jsdelivr_cdn
       - GZIP=True
      # - QUEUE_NUM=50
       - ACCESS_LOG=True
      # - PUSH_BATCH_DELTA=60
      # - QIANDAO_SQL_POOL_LOGGING_NAME=qiandao.sql.pool
      # - QIANDAO_SQL_POOL_LOGGING_LEVEL=WARNING
      # - QIANDAO_SQL_POOL_TIMEOUT=30
      # - PBKDF2_ITERATIONS=400
      # - CHECK_TASK_LOOP=500
      # - TASK_MAX_RETRY_COUNT=8
      # - DOWNLOAD_SIZE_LIMIT=5242880
      # - REQUEST_TIMEOUT=30.0
      # - CONNECT_TIMEOUT=30.0
      # - DELAY_MAX_TIMEOUT=29.9
      # - UNSAFE_EVAL_TIMEOUT=3.0
      # - NEW_TASK_DELAY=1
      # - MAIL_SSL=True
      # - MAILGUN_KEY=
    image: a76yyyy/qiandao:20240210
    labels:  
      createdBy: "Apps" 
networks:  
  1panel-network:  
    external: true
